const ValidatorSetSimplified = artifacts.require('ValidatorSetSimplified');
const AdminUpgradeabilityProxy = artifacts.require('AdminUpgradeabilityProxy');
const KeyGenHistory = artifacts.require('KeyGenHistory');
const InitializerSimplified = artifacts.require('InitializerSimplified');

const BN = web3.utils.BN;

const fp = require('lodash/fp');
require('chai')
  .use(require('chai-as-promised'))
  .use(require('chai-bn')(BN))
  .should();

contract('KeyGenHistory', async accounts => {
    let owner;    
    let initialValidators;   
    let keyGenHistory;
    let validatorSetSimplified;
    let publicKeys;

    beforeEach(async () => {
        owner = accounts[0];
        //initialValidators = accounts.slice(1, 3 + 1); // accounts[1...3]
        initialValidators = ["0xb38efa39d560e7ae029953cd420a80ce481bb139","0x3784cc868068e4c292680a34f414b29dfda11573"];
    
        validatorSetSimplified = await ValidatorSetSimplified.new();

        keyGenHistory = await KeyGenHistory.new();
        keyGenHistory = await AdminUpgradeabilityProxy.new(keyGenHistory.address, owner, []);
        keyGenHistory = await KeyGenHistory.at(keyGenHistory.address);

        const parts = [
          [0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,174,242,219,193,51,155,92,162,58,110,23,208,116,4,2,92,172,180,255,130,120,65,153,57,184,222,118,12,42,211,149,239,141,205,183,49,68,226,205,54,58,150,244,29,142,197,39,86,2,0,0,0,0,0,0,0,153,0,0,0,0,0,0,0,4,61,244,48,98,91,66,66,89,99,54,35,101,21,241,216,126,124,9,50,150,128,253,176,235,55,92,19,183,134,2,109,238,70,53,32,38,134,201,85,107,29,146,235,144,168,253,216,78,65,44,45,226,250,140,215,115,228,130,248,69,181,63,216,12,177,178,99,233,111,44,18,76,82,75,78,22,110,72,57,243,69,13,168,168,28,55,165,248,150,60,12,232,126,135,83,133,64,205,53,250,12,116,1,80,213,51,243,156,89,200,1,79,182,173,252,63,241,213,40,203,27,182,132,139,202,211,228,253,154,203,47,48,172,188,95,191,60,103,217,123,5,56,204,151,222,190,208,233,116,167,22,18,153,0,0,0,0,0,0,0,4,177,50,11,49,17,93,150,90,26,198,164,189,35,5,111,64,225,162,115,43,237,176,209,132,150,70,0,225,201,140,244,204,97,148,90,232,200,68,40,1,253,144,150,199,70,225,216,133,213,149,74,207,172,5,211,159,178,223,105,252,115,122,39,135,202,47,33,249,87,240,165,235,61,15,11,107,78,85,179,65,231,125,132,240,233,217,79,192,36,122,100,25,62,98,84,153,203,197,243,189,105,254,163,179,72,186,197,192,89,172,19,127,87,20,5,34,154,214,236,163,50,16,217,39,106,233,88,85,158,172,58,82,19,97,244,192,139,149,97,50,143,144,39,249,77,219,178,75,173,73,130,33],
          [0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,175,170,174,201,91,50,106,88,12,80,154,45,234,16,26,221,97,42,157,229,101,240,80,46,14,174,71,248,32,122,47,42,235,245,163,197,49,191,46,139,175,209,105,54,15,171,110,142,2,0,0,0,0,0,0,0,153,0,0,0,0,0,0,0,4,113,254,176,105,145,99,126,168,121,242,65,211,210,155,120,206,35,76,218,2,65,62,52,215,249,70,146,208,45,237,12,38,21,165,174,220,42,152,103,61,13,126,147,24,153,96,217,146,128,218,233,19,193,170,14,154,163,36,187,119,32,69,6,113,203,77,229,200,67,206,125,33,135,3,35,222,107,148,168,69,32,46,155,106,218,191,203,165,108,45,218,31,159,59,6,32,152,54,165,105,137,132,246,144,142,11,224,28,55,158,246,121,177,177,250,151,123,98,212,175,97,222,131,154,91,109,227,24,211,230,245,81,110,88,7,167,128,220,138,146,93,37,160,164,6,93,38,56,95,47,218,55,153,0,0,0,0,0,0,0,4,175,91,107,166,247,84,119,49,140,50,146,20,118,226,215,244,233,215,92,132,194,227,240,91,131,104,218,130,144,55,219,238,213,200,220,209,70,1,96,114,219,161,30,4,188,136,129,104,207,202,85,46,19,162,195,166,234,230,19,100,107,98,167,216,221,248,68,132,110,167,53,65,46,211,41,84,109,153,234,185,66,88,228,199,213,25,227,90,107,239,87,149,89,72,29,198,76,126,122,107,57,55,15,12,115,42,115,188,222,83,114,152,133,194,78,45,26,228,208,252,49,18,47,233,11,107,46,48,154,217,93,227,164,166,151,155,54,105,166,79,50,197,151,182,111,246,104,57,188,197,65,168]

        ];
        const acks = [
          [
            [0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,145,0,0,0,0,0,0,0,4,47,40,8,135,219,61,163,117,171,220,20,23,62,81,110,81,109,136,56,184,75,136,189,250,142,153,22,89,65,143,197,115,14,198,196,194,234,151,111,173,30,186,249,188,64,189,119,29,95,73,31,101,141,60,132,163,69,245,116,188,243,187,107,75,191,32,182,136,27,120,38,225,47,70,124,157,124,65,251,150,26,165,146,20,118,147,185,242,88,174,216,94,101,201,124,124,46,188,132,86,38,234,153,105,132,215,135,149,225,65,13,36,104,26,113,144,198,144,108,97,14,54,235,80,230,212,236,153,238,176,130,195,89,68,200,93,4,210,214,129,202,77,205,1,145,0,0,0,0,0,0,0,4,86,141,120,180,101,102,98,221,112,142,184,218,137,51,224,37,52,132,206,92,229,252,224,147,227,176,87,121,219,241,247,231,72,28,116,1,85,156,48,188,91,174,204,0,201,160,39,55,32,127,168,233,78,216,251,233,158,195,27,131,196,173,167,164,134,84,22,158,176,14,139,182,214,19,214,212,7,231,130,63,162,57,227,162,33,60,244,121,85,118,182,153,73,185,125,34,172,75,41,246,8,203,116,159,177,101,180,155,221,217,223,139,115,18,191,150,7,46,236,249,89,188,250,59,204,211,15,131,38,127,47,208,144,193,128,125,227,63,45,118,107,127,78,10],
            [1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,145,0,0,0,0,0,0,0,4,90,103,41,222,192,14,63,188,189,50,141,127,255,176,54,73,231,237,137,255,59,136,225,112,136,43,194,119,86,109,120,253,83,126,125,69,159,169,18,200,246,34,16,142,169,41,19,143,41,246,196,83,169,165,101,37,182,69,135,9,183,51,80,83,240,124,252,89,150,63,52,63,93,59,100,158,98,157,129,222,160,112,39,73,98,99,13,161,239,97,120,59,119,80,38,105,103,198,107,148,255,164,169,105,202,107,141,30,170,127,175,82,233,139,47,25,86,93,6,255,139,177,190,177,242,82,100,95,9,115,255,48,31,10,225,188,238,59,245,100,4,157,81,82,145,0,0,0,0,0,0,0,4,156,156,186,97,48,115,209,11,223,13,228,189,110,71,2,28,69,15,152,47,23,43,224,176,155,120,109,255,197,89,228,31,184,113,162,160,72,48,224,234,118,158,164,31,195,195,24,244,119,180,27,242,34,76,72,148,15,221,114,97,15,21,110,232,195,170,121,150,204,48,232,83,72,193,170,78,221,189,74,21,186,54,130,105,28,54,112,60,194,255,164,59,224,109,239,77,162,96,181,154,15,128,67,204,216,185,235,175,230,76,238,57,69,127,68,22,187,178,52,35,58,214,139,101,61,210,98,16,239,194,214,135,223,100,14,84,246,81,9,90,9,223,52,51]
          ],
          [
            [0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,145,0,0,0,0,0,0,0,4,188,142,231,72,93,226,23,83,99,138,43,79,99,36,79,229,94,128,185,132,230,196,225,170,91,80,113,255,108,184,221,15,181,254,241,236,143,91,63,13,209,110,156,51,57,118,63,24,6,19,5,156,20,73,61,45,132,206,243,130,145,11,15,125,28,189,100,214,112,13,12,233,99,213,98,32,209,74,96,68,144,137,232,18,240,38,174,227,157,55,159,173,129,177,229,39,210,157,226,17,219,24,181,213,92,33,166,171,205,131,40,148,174,136,169,13,249,50,150,48,239,78,244,233,51,199,126,225,152,82,223,254,253,224,172,142,49,237,64,207,110,178,212,253,145,0,0,0,0,0,0,0,4,16,207,97,50,227,64,39,242,244,58,175,82,116,142,128,194,135,89,160,114,100,104,177,126,148,192,221,177,41,221,86,218,210,31,177,111,5,106,62,245,135,210,149,128,158,99,108,11,150,7,120,24,15,42,186,22,2,120,77,25,150,89,76,10,16,89,127,228,178,130,71,121,141,179,174,67,46,154,238,148,100,113,121,14,255,25,99,98,14,94,241,20,125,95,185,231,97,144,88,104,67,111,73,18,169,232,22,250,32,243,147,164,101,25,149,205,76,70,46,192,207,116,194,186,15,169,169,96,253,253,206,3,16,18,76,126,65,224,208,182,215,88,68,114],
            [1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,145,0,0,0,0,0,0,0,4,25,43,131,85,71,223,5,40,247,121,208,110,0,3,183,172,215,229,224,145,2,208,6,93,239,53,109,227,37,104,86,246,245,83,141,192,82,179,251,139,105,239,251,196,75,249,168,136,78,179,244,214,23,24,37,74,34,196,238,156,201,118,32,86,54,1,131,129,86,80,119,202,245,99,115,171,82,154,9,220,197,130,74,237,96,116,238,119,103,44,178,242,130,105,171,114,28,250,148,179,74,231,155,230,169,9,41,17,220,148,244,162,236,229,214,175,150,116,136,135,59,129,251,194,206,55,136,15,51,14,128,215,12,133,49,115,32,53,236,238,161,174,250,96,145,0,0,0,0,0,0,0,4,42,13,187,102,216,115,109,219,171,125,143,101,54,123,54,20,202,6,173,139,248,130,24,83,78,37,229,195,201,99,6,170,114,197,188,82,146,198,141,124,238,218,159,229,81,131,97,147,1,242,203,11,241,133,26,71,203,154,27,192,242,84,11,79,187,38,34,172,203,246,113,127,111,159,102,65,58,95,74,11,216,131,243,27,182,62,145,65,19,141,120,79,201,59,142,170,185,112,116,65,149,14,96,241,65,85,141,27,154,208,135,152,4,225,194,116,167,57,127,79,122,106,221,139,243,63,74,220,207,157,38,126,99,114,224,245,91,44,162,193,150,99,230,43]
          ]
        ];

        //await keyGenHistory.initialize(validatorSetSimplified.address, initialValidators, parts, acks).should.be.fulfilled;

        publicKeys = [
          "0xd6c1fa7ce87f0c7d9916e88d9544203d1ca88f3dc4d4cbc3bd81f220b004189bc95c3ad0ce94bcdecee439a2fece8e9becb510211bf7b27668c7454b774033ce",
          "0xea5e0677a34dc3b8209774c94e9769fb908ff0af027acd8850b25288b15c64e5052bec3e08857e8481caec09a72077876147124048a85d9ab5173691bee26490"];
        for (let i = 0; i < publicKeys.length; i++) {
          publicKeys[i] = publicKeys[i].trim();
        }
        let publicKeysSplit = fp.flatMap(x => [x.substring(0, 66), '0x' + x.substring(66, 130)])(publicKeys);
      
        //await validatorSetSimplified.initialize(initialValidators, publicKeysSplit);

        let contractAddresses = [validatorSetSimplified.address, keyGenHistory.address];
        await InitializerSimplified.new(contractAddresses, initialValidators, publicKeysSplit, parts, acks);
      });

    describe('initialize()', async () => {
        it('should initialize successfully', async () => {
        });
    });

    describe('validator_data()', async () => {
      it('should report the right number of validators', async () => {
          const validators = await validatorSetSimplified.getValidators();
      });
      it('should return the correct public key for validators', async () => {
        const validators = await validatorSetSimplified.getValidators();
        (await validatorSetSimplified.getPublicKey(validators[1])).should.be.equal(publicKeys[1]);
    });
  });
});
